@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@inject FBone.Database.DataManager DM
@using FBone.Service;
@model FBone.Models.NMode.NMTotalRecordViewModel
@addTagHelper *, FBone

<style>
    select {
        width: 100px
    }

    input {
        width: 200px
    }

    label {
        width: 100px
    }

    .glyphicon {
        display: inline-block;
        padding: 0 5px;
    }

    .glyphicon-chevron-right:after {
        content: "\00BB";
    }

    .glyphicon-chevron-left:before {
        content: "\00AB";
    }

    .shade {
        background-color: aqua;
    }

    .align-to-right {
        display: flex;
        justify-content: space-between;
    }

    .right-aligned {
        align-self: flex-end;
        padding: 0px;
    }
    /*   .body-container {
                                                                                                                            max-width: 100%;
                                                                                                                        } */
</style>

<form method="get">
    <input type="hidden" name="SelectedDate" value=@Model.SelectedDate.ToString("yyyy-MM-dd") />
    <input type="hidden" name="Calculated" value=@Model.Calculated.ToString() />
    <input type="hidden" name="sortOrder" value=@Model.SortViewModel.Current.ToString() />
    <input type="hidden" name="page" value=@Model.Page.PageNumber />

    <text>&nbsp;</text>
    <h4>Records</h4>
    <div class="fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-tl ui-corner-tr">
        <div class="align-to-right">
            <div class="left-aligned">
                <span>
                    <text>Page size</text>
                    <select name="PageSize" asp-items="Model.Page.PageSizeList" onchange="this.form.submit()"></select>
                </span>
            </div>
            <div class="right-aligned">
                <input type="search" id="search" asp-for="Search" name="Search" placeholder="Search for Tagnames" onsearch="onSearchChanged(this, this.form)" />
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>
<!DOCTYPE html>

<table class="table table-light table-hover" id="nmoderecords" role="banner" aria-describedby="nmoderecords">
    <thead>
        <tr>
            <th>
                <a asp-action=@ViewData["Action"] asp-controller=@ViewData["Controller"]
                   asp-route-sortOrder="@(Model.SortViewModel.TagnameSort)"
                   asp-route-Calculated="@(Model.Calculated)"
                   asp-route-SelectedDate="@(Model.SelectedDate.ToString("yyyy-MM-dd"))"
                   asp-route-page="@(Model.Page.PageNumber)"
                   asp-route-PageSize="@(Model.Page.PageSize)"
                   asp-route-Search="@(Model.Search)"
                   asp-route-ValidateTags="@Model.ValidateTags"
                   asp-route-ResultDetails="@Model.ResultDetails">
                    Tagname
                </a>
            </th>
            <th>Nmode</th>
            <th>Descriptor</th>
            <th>CountIt</th>
            <th>NMode ORed</th>
            <th>Condition ORed</th>
            <th>Conditions</th>
            @if (Model.Calculated)
            {
                @if (Model.ResultDetails)
                {
                    <th>Day Normal</th>
                    <th>Day Manual</th>
                    <th>Day Other</th>
                    <th>Night Normal</th>
                    <th>Night Manual</th>
                    <th>Night Other</th>
                }
                else
                {
                    <th>
                        <a asp-action=@ViewData["Action"] asp-controller=@ViewData["Controller"]
                           asp-route-sortOrder="@(Model.SortViewModel.NormalTotalSort)"
                           asp-route-Calculated="@(Model.Calculated)"
                           asp-route-SelectedDate="@(Model.SelectedDate.ToString("yyyy-MM-dd"))"
                           asp-route-page="@(Model.Page.PageNumber)"
                           asp-route-PageSize="@(Model.Page.PageSize)"
                           asp-route-Search="@(Model.Search)"
                           asp-route-ValidateTags="@Model.ValidateTags"
                           asp-route-ResultDetails="@Model.ResultDetails">
                            NormalTotal
                        </a>
                    </th>
                }
            }
            <th>
                Links
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.NModeRecords)
        {
            <tr style="@((item.TagHealthStatus !=FBone.Models.NMode.TagHealthStatus.Good && item.TagHealthStatus != FBone.Models.NMode.TagHealthStatus.Unchecked )? "color:red;":"")">
                <td>@item.Tagname</td>
                @*                 <td>@item.Area.Name</td>
            <td>@item.Lcn.Name</td> *@
                <td>@item.Nmode</td>
                <td>@item.Descriptor</td>
                <td>@item.CountIt</td>
                <td>@item.NModeORed</td>
                <td>@item.ConditionORed</td>
                <td>@item.Conditions.Count</td>
                @if (Model.Calculated)
                {
                    @if (Model.ResultDetails)
                    {
                        <td>@item.DayNormal.ToString("f2")</td>
                        <td>@item.DayManual.ToString("f2")</td>
                        <td>@item.DayOther.ToString("f2")</td>
                        <td>@item.NightNormal.ToString("f2")</td>
                        <td>@item.NightManual.ToString("f2")</td>
                        <td>@item.NightOther.ToString("f2")</td>
                    }
                    else
                    {
                        <td>@item.NormalTotal.ToString("f2")</td>
                    }
                }
                <td>
                    <a asp-controller="NModeRecords" asp-action="Details" asp-route-id="@item.Id">Details</a>
                    @if (DM.IsUserInRole(User, Enums.Roles.IsNModeEditor))     
                    {
                        <a asp-controller="NModeRecords" asp-action="Edit" asp-route-id="@item.Id">| Edit</a>
                        <a asp-controller="NModeRecords" asp-action="Delete" asp-route-id="@item.Id">| Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-bl ui-corner-br">
    <div class="align-to-right">
        <div class="left-aligned">
            Showing @Model.Page.StartRecord to @Model.Page.EndRecord of @Model.Page.RecordCount
        </div>
        <div class="right-aligned">
            <page-link page-model="Model.Page" page-controller=@ViewData["Controller"] page-action=@ViewData["Action"] page-size="Model.Page.PageSize"
                       page-calculated=@Model.Calculated page-search=@Model.Search selected-date=@Model.SelectedDate validate-tags=@Model.ValidateTags
                       result-Details=@Model.ResultDetails Sort-Order="@Model.SortViewModel.Current"></page-link>
        </div>
    </div>
</div>
<form method="get" asp-action=@ViewData["Action"]>
    <input type="hidden" name="ID" value=@Model.TotalRecord.Id />
    @*     <input type="hidden" name="Calculated" id="Calc" value="true" /> *@
    <input type="hidden" name="sortOrder" value=@Model.SortViewModel.Current.ToString() />
    <input type="hidden" name="page" value=@Model.Page.PageNumber />
    <input type="hidden" name="Search" value="@Model.Search" />
    <input type="hidden" name="PageSize" value=@Model.Page.PageSize />


    @*    <input type="submit" value="Evaluate" class="btn btn-primary" />
    <input type="submit" value="Save To PI" asp-action="SaveToPI" class="btn btn-primary" />*@

    <span>
        <div class="align-to-right">
            <div class="left-aligned">
                <input class="form-check-input" asp-for=@Model.Calculated name="Calculated" onchange="this.form.submit()" />
                <label for="Calculated">Evaluated at</label>
                <input type="date" id="datepicker" asp-for="SelectedDate" name="SelectedDate" />
            </div>
            <div>
            </div>
            <div class="right-aligned">
                <scope>
                    <input class="form-check-input" asp-for=@Model.ResultDetails name="resultDetails" onchange="this.form.submit()" />
                    <label for="ResultDetails">Result details</label>
                    <input class="form-check-input" asp-for=@Model.ValidateTags name="ValidateTags" onchange="this.form.submit()" />
                    <label for="ValidateTags">Validate tags</label>
                </scope>
            </div>
    </span>
</form>

<script>

    document.addEventListener("load", setDateTime("datepicker", new Date("@Model.SelectedDate.ToString("yyyy-MM-dd")")));

    function dateIsValid(date) {
        if (date instanceof Date && !isNaN(date)) {
            if (date.getFullYear() == 1)
                return false;
            else
                return true;
        }
        else
            return true;
    };

    function setDateTime(element, selectedDate) {
        let input = document.getElementById(element);
        let currentDate = new Date();
        let startDate = currentDate;
        startDate.setDate(currentDate.getDate() - 31);
        let endDate = new Date();
        endDate.setDate(endDate.getDate() - 1);
        selectedDate = new Date(selectedDate);

        input.min = startDate.toISOString().slice(0, 10);
        input.max = endDate.toISOString().slice(0, 10);
        if (dateIsValid(selectedDate))
            input.value = selectedDate.toISOString().slice(0, 10);
        else
            input.value = endDate.toISOString().slice(0, 10);
    };

    function onSearchChanged(input, form) {
        console.log(input);
        if (input.value == "") {
            form.submit();
        }
    };


</script>
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using FBone.Models.Audits;
@using FBone.Service
@model FBone.Models.Audits.AuditDetailsModel

@{
    var disabled = "";
    var disabled_action = "disabled";
    var disabled_verify = "disabled";
    var disabled_approval1 = "disabled";
    var disabled_approval2 = "disabled";
    var disabledStyle = "";
    if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval1 && Model.CanApprove1)
    {
        disabled_approval1 = "";
    }
    if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval2 && Model.CanApprove2)
    {
        disabled_approval2 = "";
    }
    if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnVerification && Model.CanVerify)
    {
        disabled_verify = "";
    }
    if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.InProgress && Model.CanComplete)
    {
        disabled_action = "";
    }
    if (!Model.CanEdit || Model.Audit.StatusCode != (int)Enums.AuditStatusCode.Draft)
    {
        disabled = "disabled";
        disabledStyle = "background: #e9ecef";
    }

    if (Model.Audit.Id == 0)
    {
        ViewData["Title"] = @localizer["create"];
    }
    else
    {
        //ViewData["Title"] = @localizer["edit"];
        ViewData["Title"] = localizer["edit"].Value + " № " + @Model.Audit.Id;

        //ViewData["Title"] = @localizer["edit"] + " № " + @Model.act.Id;
    }
}
<div class="row">
    <div class="col-md-12">
        <h1 style="text-align:center">
            @ViewData["Title"] -
            @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Draft)
            {
                @localizer["statusdraft"]
            }
            else if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval1 || Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval2)
            {
                @localizer["statusonapproval"]                
            }
            else if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.InProgress)
            {
                @localizer["statusinprogress"]
            }
            else if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnVerification)
            {
                @localizer["statusonverifiation"]
            }
            else if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Closed)
            {
                @localizer["statusclosed"]
            }            
        </h1>
    </div>
</div>
<form asp-action="SaveAudit" onsubmit="return validateForm()">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <input type="hidden" asp-for="@Model.Audit.Id" />
    <input type="hidden" asp-for="@Model.Audit.StatusCode" />
    <input type="hidden" asp-for="@Model.Audit.CreatedByUserID" />
    <input type="hidden" asp-for="@Model.Audit.Tags" id="audittags" />    
    <input type="hidden" asp-for="@Model.startApproval" id="startApproval" />
    @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Draft){
        <input type="hidden" asp-for="@Model.Audit.ActionTakenNote" />
        <input type="hidden" asp-for="@Model.Audit.VerificationNote" />
        <input type="hidden" asp-for="@Model.Audit.Approval1Note" />
        <input type="hidden" asp-for="@Model.Audit.Approval2Note" />
    }

    @* <div class="row">
        <div class="col-sm-5">
            <div class="form-group">
                <label asp-for="@Model.Audit.Name" class="control-label">@localizer["name"]</label>
                <input asp-for="@Model.Audit.Name" class="form-control" disabled="@(disabled != "" ? "disabled" : null)" />
                <span asp-validation-for="@Model.Audit.Name" class="text-danger"></span>
            </div>
        </div>
    </div>     *@
    <div class="row">
        <div class="col-sm-2">
            <label asp-for="@Model.Audit.CreatedAt" class="control-label">@localizer["createdat"]</label>
            <input asp-for="@Model.Audit.CreatedAt" class="form-control" disabled />            
        </div>
        <div class="col-sm-3">
            <label asp-for="@Model.Audit.CreatedByUser.Name_EN" class="control-label">@localizer["createdby"]</label>
            <input asp-for="@Model.Audit.CreatedByUser.Name_EN" class="form-control" disabled />
        </div>
        @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Closed){
            <div class="col-sm-2">
                <label asp-for="@Model.Audit.CloseDate" class="control-label">@localizer["closedat"]</label>
                <input asp-for="@Model.Audit.CloseDate" class="form-control" disabled />
            </div>
        }     
        <div class="col-sm-2">
            <label for="DueDate">@localizer["duedate"]</label>
            <input asp-for="@Model.Audit.DueDate" id="DueDate" class="form-control" disabled="@(disabled != "" ? "disabled" : null)" />
            <span asp-validation-for="@Model.Audit.DueDate" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-2">
            <label for="facilityid">@localizer["facility"]:</label>
            <select asp-for="@Model.Audit.FacilityId" class="form-select" asp-items="@Model.Facilities" id="facilityid" disabled="@(disabled != "" ? "disabled" : null)" onchange="facilityChanged()"></select>
        </div>
        <div class="col-sm-2">
            <label for="areaid">@localizer["area"]:</label>
            <select asp-for="@Model.Audit.AreaId" class="form-select" asp-items="@Model.Areas" id="areaid" disabled="@(disabled != "" ? "disabled" : null)" onchange="areaChanged()"></select>
        </div>
        <div class="col-sm-2">
            <label for="shiftdate">@localizer["shiftdate"]</label>
            <input asp-for="@Model.Audit.ShiftDate" id="shiftdate" class="form-control" disabled="@(disabled != "" ? "disabled" : null)" onchange="dateChanged()" />
            <span asp-validation-for="@Model.Audit.ShiftDate" class="text-danger"></span>
        </div>
        <div class="col-sm-2">
            <label for="actid">@localizer["act"]:</label>
            <select asp-for="@Model.Audit.ActId" class="form-select" asp-items="@Model.Acts" id="actid" onchange="loadTags()" disabled="@(disabled != "" ? "disabled" : null)"></select>
        </div>
    </div>
    <div class="row" style="padding: 10px;">
        <div class="col-md-4" style="text-align: center">
            @if (Model.FileId != 0)
            {
                <div id="attachmentContainer">
                    <label>Attached file</label>
                    <a asp-action="GetAttachment" asp-route-auditId="@Model.Audit.Id" asp-route-fileId="@Model.FileId" id="getAttachment">
                        @Model.FileName
                    </a>
                    @if (Model.CanEdit)
                    {
                        <input id="rmAttachment" type="button" class="btn btn-sm btn-secondary" value="@localizer["remove"]" onclick="removeAttachment(@Model.Audit.Id);" />
                    }
                </div>
            }
            @if (Model.CanEdit && Model.FileId == 0)
            {
                <div>
                    <label>@localizer["attach"]</label>
                    <br />
                    <input type="hidden" asp-for="FileId" />
                    <input type="file" name="Attachment" accept=".pdf,.xls,.xlsx,.doc,.docx" onchange="fileChange(event);" />
                    <br /><span asp-validation-for="@Model.FileId" class="text-danger"></span>
                </div>
            }
            <div id="newAttachmentContainer" hidden>
                <label>@localizer["attach"]</label>
                <br />
                <input type="hidden" asp-for="FileId" />
                <input type="file" name="Attachment" accept=".pdf,.xls,.xlsx,.doc,.docx" onchange="fileChange(event);" />
                <br /><span asp-validation-for="@Model.FileId" class="text-danger"></span>
            </div>
        </div>
    </div>    
    <div class="row">
        <div class="col-md-5"></div>
        <div class="col-md-3">
            <div style="text-align: center">
                <b>@localizer["taglistmessage"]</b>
            </div>
            <div style="text-align: center">
                <label>@localizer["add_tag"]:</label>
                <select class="my-form-control" asp-items="@Model.Tags" style="@disabledStyle" id="acttags" disabled="@(disabled != "" ? "disabled" : null)"></select>                
                <button title="@localizer["add_title"]" type="button" style="@disabledStyle" class="btn btn-outline-secondary btn-sm" aria-label="Left Align" onclick="AddNewLi();" @disabled>
                    <svg width="16" height="16" fill="currentColor" class="bi bi-plus" viewBox="0 0 16 16">
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                    </svg>
                </button>
                <button title="@localizer["addall_title"]" type="button" style="@disabledStyle" class="btn btn-outline-secondary btn-sm" aria-label="Left Align" onclick="AddAllLi();" @disabled>
                    <svg width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                        <path d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                        <path d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z" />
                    </svg>
                </button>
                <br>
                <span asp-validation-for="@Model.Audit.Tags" class="text-danger"></span>
            </div>
            <ul id="ultaglist">
                @if (!string.IsNullOrEmpty(Model.Audit.Tags))
                {
                    @foreach (var item in Model.Audit.Tags.Split("/-/"))
                    {
                        <li id="@item">
                            @item
                            <button title="@localizer["remove_title"]" type="button" style="@disabledStyle" class="btn btn-outline-secondary btn-sm" aria-label="Left Align" onclick="RemoveLi('@item');" @disabled>
                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16">
                                    <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" />
                                </svg>
                            </button>
                        </li>
                    }
                }                
            </ul>            
        </div>
        <div class="col-md-1"></div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <label for="resposibleid">@localizer["responsible"]</label>
            <select asp-for="@Model.Audit.ActionOwnerPositionId" class="form-select" onchange="positionChanged()" asp-items="@Model.Positions" id="actionowner" disabled="@(disabled != "" ? "disabled" : null)"></select>
        </div>
        <div class="col-sm-7">
            <label>@localizer["personsinposition"]:</label>
            <textarea asp-for="@Model.UsersInPosition" class="form-control" style="background: #e9ecef" rows="4" id="personsinposition" readonly></textarea>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-10">
            <label for="requiredaction">@localizer["requiredaction"]</label>
            <textarea asp-for="@Model.Audit.RequiredActionNote" class="form-control" rows="4" id="requiredaction" disabled="@(disabled != "" ? "disabled" : null)"></textarea>
            <span asp-validation-for="@Model.Audit.RequiredActionNote" class="text-danger"></span>
        </div>
    </div>
    @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.InProgress ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnVerification ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval1 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval2 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Closed){
        <div class="row">
            <div class="col-sm-10">
                <label for="requiredaction">@localizer["completemessage"]</label>
                <textarea asp-for="@Model.Audit.ActionTakenNote" class="form-control" rows="4" id="completemessage" disabled="@(disabled_action != "" ? "disabled" : null)"></textarea>                
            </div>
        </div>
        <div class="row">
            @if (Model.CanComplete && Model.Audit.StatusCode == (int)Enums.AuditStatusCode.InProgress)
            {
                <div class="form-group">
                    <label asp-for="@Model.Audit.LinkToVerificationDocs" class="control-label">@localizer["linktoverdocs"]</label>
                    <input asp-for="@Model.Audit.LinkToVerificationDocs" id="linktoverdocs" class="form-control" />
                </div>
            }
            else {
                <div class="form-group">
                    <label class="control-label">@localizer["linktoverdocs"]</label>
                    <a target="_blank" href="@Model.Audit.LinkToVerificationDocs">@Model.Audit.LinkToVerificationDocs</a>                    
                </div>
            }            
        </div>
    }
    
    @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnVerification ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval1 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval2 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Closed)
    {
        <div class="row">
            <div class="col-sm-10">
                <label for="requiredaction">@localizer["verifymessage"]</label>
                <textarea asp-for="@Model.Audit.VerificationNote" class="form-control" rows="4" id="verifymessage" disabled="@(disabled_verify != "" ? "disabled" : null)"></textarea>
            </div>
        </div>
    }
    @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval1 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval2 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Closed)
    {
        <div class="row">
            <div class="col-sm-10">
                <label for="requiredaction">@localizer["approvalmessage1"]</label>
                <textarea asp-for="@Model.Audit.Approval1Note" class="form-control" rows="4" id="approvalmessage1" disabled="@(disabled_approval1 != "" ? "disabled" : null)"></textarea>
            </div>
        </div>
    }
    @if (Model.Audit.StatusCode == (int)Enums.AuditStatusCode.OnApproval2 ||
        Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Closed)
    {
        <div class="row">
            <div class="col-sm-10">
                <label for="requiredaction">@localizer["approvalmessage2"]</label>
                <textarea asp-for="@Model.Audit.Approval2Note" class="form-control" rows="4" id="approvalmessage2" disabled="@(disabled_approval2 != "" ? "disabled" : null)"></textarea>
            </div>
        </div>
    }
    
    <div class="row" style="padding: 10px;">
        <div style="text-align: center">            
            @if (Model.CanEdit && Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Draft)
            {
                <div class="form-group">
                    <div class="checkbox">
                        <input type="checkbox" class="startApprove"> @localizer["startapprove"]
                    </div>
                </div>
            }
        </div>
    </div>
    <div class="row" style="padding: 10px;">
        <div style="text-align: center">
            <a asp-action="Index"
            asp-route-PageIndex="@Model.PageIndex"
            asp-route-itemperpage="@Model.ItemPerPage"
            asp-route-SelectedFacilityId="@Model.SelectedFacilityId"
            asp-route-SelectedAreaId="@Model.SelectedAreaId"
            asp-route-SelectedActStatus="@Model.SelectedAuditStatus"
            asp-route-SmartSearch="@Model.SmartSearch"
            asp-route-DateFromS="@Model.DateFrom"
            asp-route-DateToS="@Model.DateTo"
            class="btn btn-secondary">@localizer["backtolist"]</a>
            @if (Model.CanEdit)
            {
                <input type="submit" value="@localizer["saveaudit"]" class="btn btn-primary" />
            }
</form>
            @if (Model.CanEdit && Model.Audit.Id != 0 && Model.Audit.StatusCode == (int)Enums.AuditStatusCode.Draft)
            {
                <a class="btn btn-success" onclick="DeleteAudit(@Model.Audit.Id)"> @localizer["delete"]</a>
            }
            @if (Model.CanComplete)
            {
                <a class="btn btn-success" onclick="CompleteAction(@Model.Audit.Id)"> @localizer["complete"]</a>
            }
             @if (Model.CanVerify)
            {
                <a class="btn btn-success" onclick="VerifyAudit(@Model.Audit.Id)"> @localizer["verify"]</a>
            }
            @if (Model.CanApprove1)
            {
                <a class="btn btn-success" onclick="Approve1(@Model.Audit.Id)"> @localizer["approve"]</a>
            }
            @if (Model.CanApprove2)
            {
                <a class="btn btn-success" onclick="Approve2(@Model.Audit.Id)"> @localizer["approve"]</a>
            }
            @if (Model.CanComplete || Model.CanVerify || Model.CanApprove1 || Model.CanApprove2)
            {                
                <div class="modal" id="rejectModal" tabindex="-1" aria-labelledby="rejectModalLabel" aria-hidden="true">
                    <div class="modal-dialog">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="rejectModalLabel">@localizer["reject2"]</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <form asp-controller="Auditing" asp-action="Reject" method="post" class="form-horizontal" role="form">
                                <input type="hidden" asp-for="@Model.Audit.Id" id="auditid" name="auditid" />
                                <div class="modal-body">
                                    @localizer["rejectm"]
                                    <textarea name="rejectcomment" id="rejectcomment" rows="5" cols="60"></textarea>
                                </div>
                                <div class="modal-footer">
                                    <input type="submit" value="@localizer["reject"]" class="btn btn-primary" id="rejectbtn" disabled />
                                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">@localizer["cancel"]</button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <a href="#" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#rejectModal">@localizer["reject"]</a>
            }
        </div>
    </div>    

<div class="row">
    <h2>@localizer["audithtitle"]</h2>
    <div class="col-sm-6">
        <table class="table" aria-describedby="history">
            <thead>
                <tr>
                    <th class="text-center">@localizer["audithdate"]</th>
                    <th class="text-center">@localizer["audithUser"]</th>
                    <th class="text-center">@localizer["audithevent"]</th>
                    <th class="text-center">@localizer["comment"]</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var history in @Model.AuditHistory)
                {
                    <tr>
                        <td>
                            @Html.Raw(history.EventDate)
                        </td>
                        <td>
                            @Html.Raw(history.ActionUser.Name_EN)
                        </td>
                        <td>
                            @if (history.HistoryCode == (int)Enums.AuditHistoryCode.Created)
                            {
                                @localizer["evt_created"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.Updated)
                            {
                                @localizer["evt_updated"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.Submitted)
                            {
                                @localizer["evt_submitted"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.ActionCompleted)
                            {
                                @localizer["evt_actioncompleted"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.Verified)
                            {
                                @localizer["evt_verified"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.Approved)
                            {
                                @localizer["evt_approved"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.Rejected)
                            {
                                @localizer["evt_rejected"]
                            }
                            else if (history.HistoryCode == (int)Enums.AuditHistoryCode.Closed)
                            {
                                @localizer["evt_closed"]
                            }                            
                            else
                            {
                                @localizer["evt_unknown"]
                            }
                        </td>
                        <td>
                            @Html.Raw(history.Comment)
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@section scripts
{
    @{await Html.RenderPartialAsync($"_ValidationScriptsPartial");}
    <script>
        function Approve1(id){
            var host = "@Model.URL";
            var approvalmessage1 = $("#approvalmessage1");
            var message = remove_linebreaks(approvalmessage1.val());
            var url1 = host + "/Auditing/ApproveAudit1/?auditid=" + id + "&message=" + message;
            window.location.href = url1;            
        }
        function Approve2(id){
            var host = "@Model.URL";
            var approvalmessage2 = $("#approvalmessage2");
            var message = remove_linebreaks(approvalmessage2.val());
            var url1 = host + "/Auditing/ApproveAudit2/?auditid=" + id + "&message=" + message;
            window.location.href = url1;
        }

        function VerifyAudit(id){
            var host = "@Model.URL";
            var verifymessage = $("#verifymessage");
            if (!verifymessage.val())
            {
                bootbox.alert("@localizer["verifyemessage_required"]");
                return;
            }
            var message = remove_linebreaks(verifymessage.val());            
            var url1 = host + "/Auditing/VerifyAudit/?auditid=" + id + "&message=" + message;
            window.location.href = url1;            
        }

        function remove_linebreaks(str) {
            return str.replace(/[\r\n]+/gm, "/-NN-/");
        }

        function CompleteAction(id){
            var host = "@Model.URL";
            var completemessage = $("#completemessage");
            var linktoverdocs = $("#linktoverdocs");
            if (!completemessage.val())
            {
                bootbox.alert("@localizer["completemessage_required"]");
                return;
            }
            var message = remove_linebreaks(completemessage.val());
            var url1 = host + "/Auditing/CompleteAction/?auditid=" + id + "&message=" + message + "&link=" + linktoverdocs.val();
            window.location.href = url1;            
        }

        function DeleteAudit(id) {
            var host = "@Model.URL";
            bootbox.confirm("@localizer["confirm_delete"]", 
            function (result) {
                if (result) {
                    var url1 = host + "/Auditing/Delete/?auditid=" + id;
                    window.location.href = url1;
                }
            });
        }

        function positionChanged(){
            var actionowner = $("#actionowner");
            var personsinposition = $("#personsinposition");
            var host = "@Model.URL";
            personsinposition.val('');

            $.ajax({
                url: host + "/api/Users/GetUsersByPosition?positionId=" + actionowner.val(),
                method: "GET",
                success: function(data) {
                    personsinposition.val(data);                    
                },
            error: function(xhr, status, error) {
                toastr.error("An error occurred... Status: " + error + " " + xhr.status + " " + xhr.responseText)
            }
            });

        }

        function clearAllLi(){
            var ultaglist = $("#ultaglist");
            ultaglist.empty();
            var audittags = $("#audittags");
            audittags.val('');
        }

        function AddAllLi(){
            clearAllLi();
            var audittags = $("#audittags");
            var ultaglist = $("#ultaglist");
            //var cmbActTags = $("#acttags");
            //var arr = [];
            //cmbActTags.each(function(){
                //arr.push(this.value);
            //});
            //console.log(arr);
            var arr = [];
            var bb = $('#acttags option');
            bb.each(function(){
                var val = this.label
                arr.push(val);
                ultaglist.append(getLi(val));
            });
            if (arr.length>0)
            {
                audittags.val(arr.join('/-/'));
            }                
        }

        function AddNewLi() {
            var cmbActTags = $("#acttags");
            if (cmbActTags.val())
            {
                var audittags = $("#audittags");
                var tagList = [];
                if (audittags.val().length>0)
                    tagList = audittags.val().split("/-/");

                var itemToAdd = cmbActTags.val();
                var index = tagList.indexOf('' + itemToAdd);
                if (index === -1){
                    tagList.push(itemToAdd);
                    if (tagList.length>1)
                        audittags.val(tagList.join('/-/'));
                    else
                        audittags.val(itemToAdd);
                    var ultaglist = $("#ultaglist");
                    ultaglist.append(getLi(itemToAdd));
                }
            }            
        }

        function getLi(tagName) {
            var title="@localizer["remove_title"]"
            var li = '<li id="' + tagName +'">' + tagName;
            li += '&nbsp;<button title="' + title + '" type="button" class="btn btn-outline-secondary btn-sm" aria-label="Left Align" onclick=\'RemoveLi("'+tagName+'");\'>';
            li += '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-dash" viewBox="0 0 16 16"><path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z"></path></svg></button></li>';
            
            return li;
        }

        function RemoveLi(tag) {
            $("#" + tag).remove();
            var audittags = $("#audittags");
            var tagList = audittags.val().split("/-/");
            var index = tagList.indexOf('' + tag);
            tagList.splice(index,1);
            audittags.val(tagList.join('/-/'));
        }

        function validateForm() {
            return true;
        }

        function removeAttachment(auditId){
            var host = "@Model.URL";
            $.ajax({
                url: host + `/Auditing/DeleteAttachment`,
                contentType: "application/json; charset=utf-8",
                data: {
                    auditId: auditId
                },
                dataType: "json",
                success: function (result, status, xhr) {
                    alert('Attachment deleted');
                    const attachment = document.getElementById('attachmentContainer');
                    attachment.remove();

                    const newAttachmentContainer = document.getElementById('newAttachmentContainer');
                    newAttachmentContainer.hidden = false;

                },
                error: function (xhr, status, error) {
                    alert(`Error when deleting attachment: ${error}`);
                }
            });
        }

        function fileChange(event){
            var host = "@Model.URL";
            const files = event.target.files;            

            for(let i = 0; i < files.length; i++){
                if (files[i].size > 10485760) {
                    alert("The file size exceeds maximum limit of 1mb. File wasn't uploaded.");
                    event.target.value = "";
                    return;
                }
            }

            let formData = new FormData();

            for(let i = 0; i < files.length; i++){
                formData.append("files", files[i]);
            }

            $.ajax({
                url: host + `/Auditing/UploadAttachment`,
                contentType: false,
                processData: false,
                data: formData,
                type: "POST",
                success: function (result, status, xhr) {
                    document.getElementById('FileId').value = result.fileId;                    
                },
                error: function (xhr, status, error) {
                    alert(`Error when uploading attachment: ${error}`);
                }
            });
        }

        function loadActs()
        {
            var host = "@Model.URL";
            var cmbArea = $("#areaid");
            var edtShifDate = $("#shiftdate");
            var cmbActs = $("#actid");
            var cmbActTags = $("#acttags");
            cmbActs.empty();
            cmbActTags.empty();
            clearAllLi();
            $.ajax({
                url: host + "/api/ActCombo/GetActIdsByShiftDateAndArea?areaid=" + cmbArea.val() + "&shiftDate="+edtShifDate.val(),
                method: "GET",
                success: function(data) {
                    $.each(data,
                        function(i, data) {
                            cmbActs.append($('<option/>',
                                {
                                    value: data,
                                    text: data
                                }));
                        });
                    loadTags();
                },
            error: function(xhr, status, error) {
                toastr.error("An error occurred... Status: " + error + " " + xhr.status + " " + xhr.responseText)
            }
            });            
        }

        function loadTags()
        {
            var host = "@Model.URL";            
            var cmbActs = $("#actid");
            var cmbActTags = $("#acttags");                        
            cmbActTags.empty();
            clearAllLi();
            if (cmbActs.val())
            {
                $.ajax({
                    url: host + "/api/ActCombo/GetActTags?actid=" + cmbActs.val(),
                    method: "GET",
                    success: function(data) {
                        $.each(data,
                            function(i, data) {
                                cmbActTags.append($('<option/>',
                                    {
                                        value: data,
                                        text: data
                                    }));
                            });

                    },
                    error: function(xhr, status, error) {
                        toastr.error("An error occurred... Status: " + error + " " + xhr.status + " " + xhr.responseText)
                    }
                });
            }
            
        }

        function dateChanged()
        {
            loadActs();
        }

        function areaChanged(){
            loadActs();
        }

        function facilityChanged() {
            var host = "@Model.URL";
            var cmbFacility = $("#facilityid");
            var cmbArea = $("#areaid");
            cmbArea.empty();
            $.ajax({
                url: host + "/api/Area/" + cmbFacility.val(),
                method: "GET",
                success: function(data) {                    
                    $.each(data,
                        function(i, data) {
                            cmbArea.append($('<option/>',
                                {
                                    value: data.value,
                                    text: data.text
                                }));
                        });
                    loadActs();
                },
                error: function(xhr, status, error) {
                    toastr.error("An error occurred... Status: " + error + " " + xhr.status + " " + xhr.responseText)
                }
            });

        }
        
        $('#rejectcomment').on('input', function() {
            if ($('#rejectcomment').val().length>10)
                $('#rejectbtn').prop('disabled', false);
            else
                $('#rejectbtn').prop('disabled', true);
        });

        $(".startApprove").change(function() {

            if ($(this).is(':checked')) {
                $("#startApproval").val(true);
            } else {
                $("#startApproval").val(false);
            }

        });
    </script>
}
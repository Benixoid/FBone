@using FBone.Models.NMode;
@model FBone.Models.NMode.NModeRecord

@{
    Layout = "_NModeLayout";
}
<!DOCTYPE html>
<style>
    .form-control {
        margin-bottom: 20px;
    }

    .control-label {
        margin-top: 10px;
        margin-bottom: 10px;
    }
</style>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create NMode record</title>
</head>
<body>

    <h4>NModeRecord creation</h4>
    <hr />
    <div class="row">
        <div class="col-md-4">
            <form asp-action="Create">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Area" class="control-label"></label>
                    <select asp-for="AreaId" class="form-control">
                        @{
                            var areas = (List<Area>)ViewData["Areas"];
                            <option value="">-- Select Area --</option>
                            for (int i = 1; i < areas.Count; i++)
                            {
                                <option value="@areas[i].Id">@areas[i].Name</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="AreaId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Lcn" class="control-label"></label>
                    <select asp-for="LcnId" class="form-control">
                        @{
                            var lcns = (List<Lcn>)ViewData["Lcns"];
                            <option value="">-- Select LCN --</option>
                            for (int i = 1; i < lcns.Count; i++)
                            {
                                <option value="@lcns[i].Id">@lcns[i].Name</option>
                            }
                        }
                    </select>
                    <span asp-validation-for="LcnId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Tagname" class="control-label"></label>
                    <input asp-for="Tagname" class="form-control" />
                    <span asp-validation-for="Tagname" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Descriptor" class="control-label"></label>
                    <input asp-for="Descriptor" class="form-control" />
                    <span asp-validation-for="Descriptor" class="text-danger"></span>
                </div>
                </p>
                <div class="form-group">
                    <label asp-for="Nmode" class="control-label"></label>
                    @Html.DropDownListFor(x => Model.Nmode, new SelectList(Enum.GetValues(typeof(NModeState))), new { style = "width: 100px; margin-bottom:20px;" })
                    @Html.ValidationMessageFor(x => x.Nmode, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label asp-for="Operator" class="control-label"></label>
                    @Html.DropDownListFor(x => Model.Operator, new SelectList(new string[] { "=", "<", ">", "<>" }), new { id = "operator", style = "width: 40px;" })
                    @Html.ValidationMessageFor(x => x.Operator, "", new { @class = "text-danger" })
                </div>
                </p>
                <div class="form-group form-check">
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.CountIt)
                        <input class="form-check-input" asp-for="CountIt" checked />
                    </label>
                    </p>
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.NModeORed)
                        <input class="form-check-input" asp-for="NModeORed" checked />
                    </label>
                    </p>
                    <label class="form-check-label">
                        @Html.DisplayNameFor(model => model.ConditionORed)
                        <input class="form-check-input" asp-for="ConditionORed" checked />
                    </label>
                </div>
                <div class="form-group">
                    <label class="control-label">Comment</label>
                    <textarea class="form-control" id="comment" name="Comment" rows="2">Record creation</textarea>

                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>

    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    @section Scripts {
        @{
            await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
    }
</body>
</html>

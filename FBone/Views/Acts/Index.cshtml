@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer
@using FBone.Models.Act;
@using FBone.Service
@model FBone.Models.Act.ActListModel

@{
    ViewData["Title"] = @localizer["title"];
    var createEnabled = "disabled";
    //var status = "";
    if (Model.CanCreateAct)
    {
        createEnabled = "";
    }
}
<div class="row">
    <div class="col-md-3">
        <h2>@localizer["actions"]</h2>
        
            <div class="my-space10">
                <a asp-action="RegisterAct" class="btn btn-primary @createEnabled">@localizer["createNewBtn"]</a>
            </div>
            <div class="my-space10">
                <a asp-controller="Acts" asp-action="Index" class="btn btn-primary">@localizer["clearfilter"]</a>
            </div>
        
        <form asp-controller="Acts" asp-action="Index" id="filterForm" method="post" class="form-horizontal" role="form">
            <input type="hidden" name="PageIndex" value="1">
            <input type="hidden" name="ItemPerPage" value="@Model.ItemPerPage">
            <h2>@localizer["filter"]</h2>
            <div class="col-md-8">
                <div class="row">
                    <b>@localizer["actdate"]</b>
                    <br>@localizer["from"]
                    @*<div class="input-group date-width">
                        <input class="form-control" name="DateFromS" value="@Model.DateFromS" onchange="this.form.submit();" />
                        <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div>*@
                    <div class="form-group">
                        <input class="form-control" onchange="this.form.submit();" type="date" data-val="true" data-val-required="The DateFrom field is required." id="DateFrom" name="DateFrom" value="@Model.DateFrom.ToString("yyyy-MM-dd")" />
                    </div>                    
                    @localizer["to"]
                    @*<div class="input-group date-width">
                        <input class="form-control" name="DateToS" value="@Model.DateToS" onchange="this.form.submit();" />                        
                        <span class="input-group-addon"><i class="glyphicon glyphicon-th"></i></span>
                    </div*@
                    <div class="form-group">                        
                        <input class="form-control" onchange="this.form.submit();" type="date" data-val="true" data-val-required="The DateTo field is required." id="DateTo" name="DateTo" value="@Model.DateTo.ToString("yyyy-MM-dd")" />
                    </div>                    
                </div>
                <div class="row">
                    <b>@localizer["actstatus"]</b>
                    <select class="my-form-control" id="SelectedActStatus" name="SelectedActStatus" onchange="this.form.submit();">
                        @if (Model.SelectedActStatus == 1)
                                {
                            <option value="1" selected="selected">...</option>}
                        else
                        {
                            <option value="1">...</option>}
                        @if (Model.SelectedActStatus == 2)
                        {
                            <option value="2" selected="selected">@localizer["statusnotclosed"]</option>}
                        else
                        {
                            <option value="2">@localizer["statusnotclosed"]</option>}
                        @if (Model.SelectedActStatus == 3)
                        {
                            <option value="3" selected="selected">@localizer["statusdraft"]</option>}
                        else
                        {
                            <option value="3">@localizer["statusdraft"]</option>}
                        @if (Model.SelectedActStatus == 4)
                        {
                            <option value="4" selected="selected">@localizer["statusinapproval"]</option>}
                        else
                        {
                            <option value="4">@localizer["statusinapproval"]</option>}
                        @if (Model.SelectedActStatus == 5)
                        {
                            <option value="5" selected="selected">@localizer["statusactive"]</option>}
                        else
                        {
                            <option value="5">@localizer["statusactive"]</option>}
                    </select>
                </div>
                <div class="row">
                    <b>@localizer["facility"]</b>
                    @Html.DropDownListFor(m => m.SelectedFacilityId, Model.Facilities, new { @class = "my-form-control", onchange = "facilityChanged();" })
                    @*@Html.DropDownListFor(m => m.SelectedFacilityId, Model.Facilities, new { @class = "form-control", onchange = "this.form.submit();" })*@
                </div>
                <div class="row">
                    <b>@localizer["actarea"]</b>
                    @Html.DropDownListFor(m => m.SelectedAreaId, Model.Areas, new { @class = "my-form-control", onchange = "this.form.submit();" })
                </div>
                <div class="row">
                    <b>@localizer["types"]</b>
                    <select class="my-form-control" id="SelectedActType" name="SelectedActType" onchange="this.form.submit();">
                        @if (Model.SelectedActType == 0)
                        {
                            <option value="0" selected="selected">...</option>}
                        else
                        {
                            <option value="0">...</option>}
                        @if (Model.SelectedActType == (int)Enums.ActTypeCode.bypass)
                        {
                            <option value="@((int) Enums.ActTypeCode.bypass)" selected="selected">@localizer["bypasses"]</option>}
                        else
                        {
                            <option value="@((int) Enums.ActTypeCode.bypass)">@localizer["bypasses"]</option>}
                        @if (Model.SelectedActType == (int)Enums.ActTypeCode.force)
                        {
                            <option value="@((int) Enums.ActTypeCode.force)" selected="selected">@localizer["forces"]</option>}
                        else
                        {
                            <option value="@((int) Enums.ActTypeCode.force)">@localizer["forces"]</option>}
                        @if (Model.SelectedActType == (int)Enums.ActTypeCode.s2of3)
                        {
                            <option value="@((int) Enums.ActTypeCode.s2of3)" selected="selected">@localizer["s2of3"]</option>}
                        else
                        {
                            <option value="@((int) Enums.ActTypeCode.s2of3)">@localizer["s2of3"]</option>}
                        @if (Model.SelectedActType == (int)Enums.ActTypeCode.manual)
                        {
                            <option value="@((int) Enums.ActTypeCode.manual)" selected="selected">@localizer["manual"]</option>
                        }
                        else
                        {
                            <option value="@((int) Enums.ActTypeCode.manual)">@localizer["manual"]</option>
                        }
                        @if (Model.SelectedActType == (int)Enums.ActTypeCode.inactive)
                        {
                            <option value="@((int) Enums.ActTypeCode.inactive)" selected="selected">@localizer["inactive"]</option>}
                        else
                        {
                            <option value="@((int) Enums.ActTypeCode.inactive)">@localizer["inactive"]</option>}
                        @if (Model.SelectedActType == (int)Enums.ActTypeCode.inhibited)
                        {
                            <option value="@((int) Enums.ActTypeCode.inhibited)" selected="selected">@localizer["inhibited"]</option>}
                        else
                        {
                            <option value="@((int) Enums.ActTypeCode.inhibited)">@localizer["inhibited"]</option>}
                    </select>
                </div>
                
                <div class="row">
                    <b title="@localizer["smartsearch_title"]">@localizer["smartsearch"]</b>
                    <input title="@localizer["smartsearch_title"]" class="form-control" name="SmartSearch" value="@Model.SmartSearch" onchange="this.form.submit();" />
                </div>
            </div>
        </form>
    </div>
    <div class="col-md-8">
        <h2>@ViewData["Title"]</h2>
        <div class="row">
            <div class="col-md-12">
                <div class="fg-toolbar ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-bl ui-corner-br">
                    <form asp-controller="Acts" asp-action="Index" method="post" class="form-horizontal" role="form">
                        <input type="hidden" name="PageIndex" value="1">
                        <input type="hidden" name="DateFrom" value="@Model.DateFromS">
                        <input type="hidden" name="DateTo" value="@Model.DateToS">
                        <input type="hidden" name="SelectedActStatus" value="@Model.SelectedActStatus">
                        <input type="hidden" name="SelectedAreaId" value="@Model.SelectedAreaId">
                        <input type="hidden" name="SelectedActType" value="@Model.SelectedActType">
                        <input type="hidden" name="SmartSearch" value="@Model.SmartSearch">
                        <div class="col-sm-3">
                            @localizer["show6"] @Html.DropDownListFor(m => m.ItemPerPage, Model.ItemPerPageList as SelectList, new { @class = "my-form-control", onchange = "this.form.submit();" }) @localizer["show4"]
                        </div>

                    </form>
                </div>
            </div>
        </div>
        @{
            var firstDisabled = Model.PageIndex == 1 ? "disabled" : "";
            var lastDisabled = Model.PageIndex == Model.TotalPages ? "disabled" : "";
            var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.HasNextPage ? "disabled" : "";
            var show1 = Model.TotalEntities == 0 ? 0 : (Model.PageIndex - 1) * Model.ItemPerPage + 1;
            var show2 = Model.TotalEntities < (Model.PageIndex) * Model.ItemPerPage ? Model.TotalEntities : (Model.PageIndex) * Model.ItemPerPage;
        }
        <div class="row">
            <div class="col-md-12">
                <table class="table my-table nowrap table-hover" id="acttable" aria-describedby="actlist">
                    <thead>
                        <tr>
                            <th>
                                @localizer["actnumber"]
                            </th>
                            <th>
                                @localizer["actdate"]
                            </th>
                            <th>
                                @localizer["actstatus"]
                            </th>
                            <th>
                                @localizer["closedate"]
                            </th>
                            <th>
                                @localizer["facility"]
                            </th>
                            <th>
                                @localizer["actarea"]
                            </th>
                            <th>
                                @localizer["type"]
                            </th>
                            <th>
                                @localizer["unit"]
                            </th>
                            <th>
                                @localizer["equipment"]
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ActList)
                        {
                            <tr>
                                <td>
                                    <a asp-action="ActDetails" asp-route-id="@item.Id"
                                       asp-route-DateFrom="@Model.DateFromS"
                                       asp-route-DateTo="@Model.DateToS"
                                       asp-route-SelectedActStatus="@Model.SelectedActStatus"
                                       asp-route-SelectedFacilityId="@Model.SelectedFacilityId"
                                       asp-route-SelectedAreaId="@Model.SelectedAreaId"
                                       asp-route-SelectedActType="@Model.SelectedActType"
                                       asp-route-SmartSearch="@Model.SmartSearch"
                                       asp-route-PageIndex="@Model.PageIndex"
                                       asp-route-ItemPerPage="@Model.ItemPerPage"> @item.Id</a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ActDate)
                                </td>                                
                                @if (item.StatusId == (int)Enums.ActStatusCode.Draft)
                                {
                                <td>@localizer["statusdraft"]</td>
                                }
                                else if (item.StatusId == (int)Enums.ActStatusCode.InApproval)
                                {
                                <td class="bg_red">@localizer["statusinapproval"]</td>
                                }
                                else if (item.StatusId == (int)Enums.ActStatusCode.Active)
                                {
                                <td class="bg_green">@localizer["statusactive"]</td>
                                }
                                else if (item.StatusId == (int)Enums.ActStatusCode.Closed)
                                {
                                <td class="bg_gray">@localizer["statusclosed"]</td>
                                }
                                else if (item.StatusId == (int)Enums.ActStatusCode.Approved)
                                {
                                <td class="bg_yellow">@localizer["statusapproved"]</td>
                                }
                                else if (item.StatusId == (int)Enums.ActStatusCode.InApprovalAdd)
                                {
                                <td class="bg_red">@localizer["statusinapprovaladd"]</td>
                                }
                                <td>
                                    @Html.DisplayFor(modelItem => item.CloseDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FacilityName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AreaName)
                                </td>
                                <td>
                                    @if (item.Type == (int)Enums.ActTypeCode.bypass)
                                    {
                                        @localizer["bypasses"]
                                    }
                                    else if (item.Type == (int)Enums.ActTypeCode.force)
                                    {
                                        @localizer["forces"]
                                    }
                                    else if (item.Type == (int)Enums.ActTypeCode.s2of3)
                                    {
                                        @localizer["s2of3"]
                                    }
                                    else if (item.Type == (int)Enums.ActTypeCode.inactive)
                                    {
                                        @localizer["inactive"]
                                    }
                                    else if (item.Type == (int)Enums.ActTypeCode.inhibited)
                                    {
                                        @localizer["inhibited"]
                                    }
                                    else if (item.Type == (int)Enums.ActTypeCode.manual)
                                    {
                                        @localizer["manual"]
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Unit)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Equipment)
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                <div class="ui-toolbar ui-widget-header ui-helper-clearfix ui-corner-bl ui-corner-br">
                    <div class="row">
                        <div class="col-sm-3" style="padding-top: 6px">
                            @localizer["show1"] @show1 @localizer["show2"] @show2 @localizer["show3"] @Model.TotalEntities @localizer["show4"]
                        </div>
                        <div class="col-sm-9">
                            @localizer["show5"] @Model.PageIndex @localizer["show7"] @Model.TotalPages
                            <a asp-action="Index"
                               asp-route-PageIndex="1"
                               asp-route-itemPerPage="@Model.ItemPerPage"
                               asp-route-DateFromS="@Model.DateFromS"
                               asp-route-DateToS="@Model.DateToS"
                               asp-route-SelectedFacilityId="@Model.SelectedFacilityId"
                               asp-route-SelectedAreaId="@Model.SelectedAreaId"
                               asp-route-SelectedActType="@Model.SelectedActType"
                               asp-route-SelectedActStatus="@Model.SelectedActStatus"
                               asp-route-SmartSearch="@Model.SmartSearch"
                               class="btn btn-outline-secondary @firstDisabled">
                                @localizer["first"]
                            </a>
                            <a asp-action="Index"
                               asp-route-PageIndex="@(Model.PageIndex - 1)"
                               asp-route-itemPerPage="@Model.ItemPerPage"
                               asp-route-DateFromS="@Model.DateFromS"
                               asp-route-DateToS="@Model.DateToS"
                               asp-route-SelectedFacilityId="@Model.SelectedFacilityId"
                               asp-route-SelectedAreaId="@Model.SelectedAreaId"
                               asp-route-SelectedActType="@Model.SelectedActType"
                               asp-route-SelectedActStatus="@Model.SelectedActStatus"
                               asp-route-SmartSearch="@Model.SmartSearch"
                               class="btn btn-outline-secondary @prevDisabled">
                                @localizer["prev"]
                            </a>
                            <a asp-action="Index"
                               asp-route-PageIndex="@(Model.PageIndex + 1)"
                               asp-route-itemPerPage="@Model.ItemPerPage"
                               asp-route-DateFromS="@Model.DateFromS"
                               asp-route-DateToS="@Model.DateToS"
                               asp-route-SelectedFacilityId="@Model.SelectedFacilityId"
                               asp-route-SelectedAreaId="@Model.SelectedAreaId"
                               asp-route-SelectedActType="@Model.SelectedActType"
                               asp-route-SelectedActStatus="@Model.SelectedActStatus"
                               asp-route-SmartSearch="@Model.SmartSearch"
                               class="btn btn-outline-secondary @nextDisabled">
                                @localizer["next"]
                            </a>
                            <a asp-action="Index"
                               asp-route-PageIndex="@(Model.TotalPages)"
                               asp-route-itemPerPage="@Model.ItemPerPage"
                               asp-route-DateFromS="@Model.DateFromS"
                               asp-route-DateToS="@Model.DateToS"
                               asp-route-SelectedFacilityId="@Model.SelectedFacilityId"
                               asp-route-SelectedAreaId="@Model.SelectedAreaId"
                               asp-route-SelectedActType="@Model.SelectedActType"
                               asp-route-SelectedActStatus="@Model.SelectedActStatus"
                               asp-route-SmartSearch="@Model.SmartSearch"
                               class="btn btn-outline-secondary @lastDisabled">
                                @localizer["last"]
                            </a>
                        </div>
                    </div>
                    
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        function facilityChanged() {
            var area = $('#SelectedAreaId').val("-1");
            $("#filterForm").submit();
        }

        //$(function() {
        //    $('.input-group.date').datepicker({
        //        changeMonth: true,
        //        changeYear: true,
        //        format: "dd-mm-yyyy",
        //        weekStart: 1
        //    });
        //});

        //$('.input-group.date').on('changeDate',
        //    function(ev) {
        //        $(this).datepicker('hide');
        //    });
    </script>
}




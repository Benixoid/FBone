<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="acthdate" xml:space="preserve">
    <value>Event date/time</value>
  </data>
  <data name="acthevent" xml:space="preserve">
    <value>Event</value>
  </data>
  <data name="acthtitle" xml:space="preserve">
    <value>Act history</value>
  </data>
  <data name="acthUser" xml:space="preserve">
    <value>Action user</value>
  </data>
  <data name="actnotes" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="acttype" xml:space="preserve">
    <value>Act type</value>
  </data>
  <data name="approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="approved" xml:space="preserve">
    <value>Approved:</value>
  </data>
  <data name="area" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="bypasses" xml:space="preserve">
    <value>Partial Bypass</value>
  </data>
  <data name="cause" xml:space="preserve">
    <value>And made the decision to bypass this critical protection until the deficiencies are resolved due to the following reasons (describe a reason):</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>End work</value>
  </data>
  <data name="crew" xml:space="preserve">
    <value>Crew</value>
  </data>
  <data name="date" xml:space="preserve">
    <value>Act creation date/time</value>
  </data>
  <data name="delegate1" xml:space="preserve">
    <value>Delegate</value>
  </data>
  <data name="device" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="edit" xml:space="preserve">
    <value>Act details</value>
  </data>
  <data name="equipment" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="forces" xml:space="preserve">
    <value>Partial Force</value>
  </data>
  <data name="impact" xml:space="preserve">
    <value>During the discussion the following potential negative consequences for personnel, equipment and environment were evaluated as a result of bypassing due to the process logics (list the consequences):</value>
  </data>
  <data name="inactive" xml:space="preserve">
    <value>Disable alarm</value>
  </data>
  <data name="location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="protect" xml:space="preserve">
    <value>Control measures when bypassing is applied</value>
  </data>
  <data name="reject" xml:space="preserve">
    <value>Reject</value>
  </data>
  <data name="s2of3" xml:space="preserve">
    <value>Full Bypass/Force</value>
  </data>
  <data name="startapprove" xml:space="preserve">
    <value>Start act approval workflow after save</value>
  </data>
  <data name="taglistmessage" xml:space="preserve">
    <value>Evaluated the work of the following critical protection (list the protections):</value>
  </data>
  <data name="tagname" xml:space="preserve">
    <value>Tag number</value>
  </data>
  <data name="unit" xml:space="preserve">
    <value>Unit</value>
  </data>
  <data name="comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="inhibited" xml:space="preserve">
    <value>Inhibited alarm</value>
  </data>
  <data name="statusactive" xml:space="preserve">
    <value>Active (in work)</value>
  </data>
  <data name="statusclosed" xml:space="preserve">
    <value>Closed</value>
  </data>
  <data name="statusdraft" xml:space="preserve">
    <value>Draft</value>
  </data>
  <data name="statusinapproval" xml:space="preserve">
    <value>In approval</value>
  </data>
  <data name="approvalstarted" xml:space="preserve">
    <value>Act approval is started</value>
  </data>
  <data name="approvedby" xml:space="preserve">
    <value>Approved by user</value>
  </data>
  <data name="approvedh" xml:space="preserve">
    <value>Fully approved</value>
  </data>
  <data name="closed" xml:space="preserve">
    <value>Act closed</value>
  </data>
  <data name="created" xml:space="preserve">
    <value>New act created</value>
  </data>
  <data name="delegated" xml:space="preserve">
    <value>Act approval delegated</value>
  </data>
  <data name="rejected" xml:space="preserve">
    <value>Rejected by Approver</value>
  </data>
  <data name="saved" xml:space="preserve">
    <value>Act changed, saved</value>
  </data>
  <data name="unknown" xml:space="preserve">
    <value>unknown</value>
  </data>
  <data name="translated" xml:space="preserve">
    <value>Act translated</value>
  </data>
  <data name="create" xml:space="preserve">
    <value>New act</value>
  </data>
  <data name="copyact" xml:space="preserve">
    <value>Copy act</value>
  </data>
  <data name="copied" xml:space="preserve">
    <value>Act copy created</value>
  </data>
  <data name="statusapproved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="statusinapprovaladd" xml:space="preserve">
    <value>In additional approval</value>
  </data>
  <data name="approvalstartedadd" xml:space="preserve">
    <value>Additional approval is requested</value>
  </data>
  <data name="approveradd" xml:space="preserve">
    <value>Additional (shift transfer)</value>
  </data>
  <data name="startact" xml:space="preserve">
    <value>Start work</value>
  </data>
  <data name="started" xml:space="preserve">
    <value>Work has begun</value>
  </data>
  <data name="cantclose" xml:space="preserve">
    <value>The act cannot be closed!&lt;br&gt;Make sure that the point numbers marked in red have been put into operation.&lt;br&gt;If they have been put into operation recently, please wait 20 minutes for the FB one application to update the data from the PCN systems.</value>
  </data>
  <data name="close_confirm" xml:space="preserve">
    <value>Are you sure what to close this Act?</value>
  </data>
  <data name="backtolist" xml:space="preserve">
    <value>Back to act list</value>
  </data>
  <data name="printact" xml:space="preserve">
    <value>Print act</value>
  </data>
  <data name="saveact" xml:space="preserve">
    <value>Save act</value>
  </data>
  <data name="addfgtags" xml:space="preserve">
    <value>Add FG tags</value>
  </data>
  <data name="title_fgblock" xml:space="preserve">
    <value>Show/Hide FG block</value>
  </data>
  <data name="confirm_delete" xml:space="preserve">
    <value>Are you sure whant to delete this act?</value>
  </data>
  <data name="confirm_return" xml:space="preserve">
    <value>Are you sure whant to return this act to DRAFT state?</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>Delete Act</value>
  </data>
  <data name="returndraft" xml:space="preserve">
    <value>Return Act to "Draft"</value>
  </data>
  <data name="returntodraft" xml:space="preserve">
    <value>Return from approval to Draft</value>
  </data>
  <data name="cancel" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="reject2" xml:space="preserve">
    <value>Return act</value>
  </data>
  <data name="rejectm" xml:space="preserve">
    <value>Enter reject reason (&gt;10 chars)</value>
  </data>
  <data name="add_title" xml:space="preserve">
    <value>Add new record</value>
  </data>
  <data name="remove_title" xml:space="preserve">
    <value>Remove record</value>
  </data>
  <data name="delegate2" xml:space="preserve">
    <value>Approval delegation</value>
  </data>
  <data name="delegatem" xml:space="preserve">
    <value>Select user to delegate approval</value>
  </data>
  <data name="nitifyMOC" xml:space="preserve">
    <value>Notification of the need for a MOC </value>
  </data>
  <data name="manual" xml:space="preserve">
    <value>Manual Startup Override</value>
  </data>
</root>